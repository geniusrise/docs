site_name: Geniusrise
site_url: https://docs.geniusrise.ai
site_author: ixaxaar

nav:
  - Home: index.md
  - Concepts: guides/concepts.md
  - Architecture: guides/architecture.md
  - Installation: guides/installation.md
  - Development:
      - Local setup: guides/local.md
      - Dev Cycle: guides/dev_cycle.md
      - Packaging: guides/404.md
      - Staged deployment: guides/404.md
      - Workflow ops: guides/404.md
      - Data ops: guides/404.md
      - Model ops: guides/404.md
  - Deployment:
      - Runners:
        - Kubernetes: guides/404.md
        - Apache Airflow: guides/404.md
        - AWS ECS: guides/404.md
        - AWS Batch: guides/404.md
        - Apache Storm: guides/404.md
      - Library:
        - Apache Spark: guides/404.md
        - Apache Flink: guides/404.md
        - Apache Beam: guides/404.md
  - Reference:
      - YAML structure: guides/404.md
  - Spouts:
      - Streaming:
          - Http Polling: spouts/http_polling.md
          - Socket.io: spouts/socket.io.md
          - gRPC: spouts/grpc.md
          - QUIC: spouts/quic.md
          - UDP: spouts/udp.md
          - Webhook: spouts/webhook.md
          - Websocket: spouts/websocket.md
          - SNS: spouts/sns.md
          - SQS: spouts/sqs.md
          - AMQP: spouts/amqp.md
          - Kafka: spouts/kafka.md
          - Kinesis Streams: spouts/kinesis.md
          - MQTT: spouts/mqtt.md
          - ActiveMQ: spouts/activemq.md
          - ZeroMQ: spouts/zeromq.md
          - Redis Pubsub: spouts/redis_pubsub.md
          - Redis Streams: spouts/redis_streams.md
      - Database:
        - TODO
  - Bolts:
      - Huggingface:
          - Classification: bolts/huggingface/classification.md
          - Commonsense Reasoning: bolts/huggingface/commonsense_reasoning.md
          - Instruction Tuning: bolts/huggingface/instruction_tuning.md
          - Language Model: bolts/huggingface/language_model.md
          - Named Entity Recognition: bolts/huggingface/ner.md
          - Question Answering: bolts/huggingface/question_answering.md
          - Sentiment Analysis: bolts/huggingface/sentiment_analysis.md
          - Summarization: bolts/huggingface/summarization.md
          - Translation: bolts/huggingface/translation.md
      - OpenAI:
          - Classification: bolts/openai/classification.md
          - Commonsense Reasoning: bolts/openai/commonsense_reasoning.md
          - Instruction Tuning: bolts/openai/instruction_tuning.md
          - Language Model: bolts/openai/language_model.md
          - Named Entity Recognition: bolts/openai/ner.md
          - Question Answering: bolts/openai/question_answering.md
          - Sentiment Analysis: bolts/openai/sentiment_analysis.md
          - Summarization: bolts/openai/summarization.md
          - Translation: bolts/openai/translation.md
  - Utility Bolts:
      - Indexing:
        - TODO
      - OpenAPI:
        - TODO
  - Core Reference:
      - cli:
          - boltctl: core/cli_boltctl.md
          - discover: core/cli_discover.md
          - geniusctl: core/cli_geniusctl.md
          - schema: core/cli_schema.md
          - spoutctl: core/cli_spoutctl.md
          - yamlctl: core/cli_yamlctl.md
      - core:
          - bolt: core/core_bolt.md
          - spout: core/core_spout.md
          - data:
              - batch_input: core/core_data_batch_input.md
              - batch_output: core/core_data_batch_output.md
              - input: core/core_data_input.md
              - output: core/core_data_output.md
              - streaming_input: core/core_data_streaming_input.md
              - streaming_output: core/core_data_streaming_output.md
          - state:
              - base: core/core_state_base.md
              - dynamo: core/core_state_dynamo.md
              - memory: core/core_state_memory.md
              - postgres: core/core_state_postgres.md
              - redis: core/core_state_redis.md
          - task:
              - base: core/core_task_base.md
              - ecs: core/core_task_ecs.md
              - k8s: core/core_task_k8s.md

theme:
  name: material
  palette:
    scheme: slate
    primary: pink
    accent: deep purple
  font:
    text: Fira Code
    code: Source Code Pro
  logo: assets/logo.jpg
  features:
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.tracking
    - navigation.sections
    # - navigation.expand
    - header.autohide
    - content.code.copy
    - content.code.select

markdown_extensions:
  - toc:
      permalink: true
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

plugins:
  - search
  - mkdocstrings:
      default_handler: python
      handlers:
        python:
          paths:
            [
              ../geniusrise/geniusrise,
              ../streaming-spouts/streaming_spouts,
              ../huggingface-bolts/huggingface,
            ]
          options:
            show_source: false
  - print-site:
      add_print_site_banner: true
      print_site_banner_template: "docs/assets/templates/banner.tpl"
  - plantuml:
      puml_url: https://www.plantuml.com/plantuml/

  # - build_plantuml:
  #     render: 'server' # or "local" for local rendering
  #     bin_path: '/usr/local/bin/plantuml' # ignored when render: server
  #     server: 'http://www.plantuml.com/plantuml' # official plantuml server
  #     disable_ssl_certificate_validation: true # for self-signed and invalid certs
  #     output_format: 'svg' # or "png"
  #     diagram_root: 'docs/diagrams' # should reside under docs_dir
  #     output_folder: 'out'
  #     input_folder: 'src'
  #     input_extensions: '' # comma separated list of extensions to parse, by default every file is parsed
  # - plantuml_markdown:
  #     server: http://www.plantuml.com/plantuml  # PlantUML server, for remote rendering
  #     # other global options
  #     insecure: False                           # set to True if the server uses self-signed certificates
  #     cachedir: /tmp                            # set a non-empty value to enable caching
  #     base_dir: .                               # where to search for diagrams to include
  #     config:                                   # PlantUML config file, relative to base_dir (a PlantUML file included in every diagram)
  #     format: png                               # default diagram image format
  #     classes: class1,class2                    # default diagram classes
  #     encoding: utf-8                           # character encoding for external files (default utf-8)
  #     title: UML diagram                        # default title (tooltip) for diagram images
  #     alt: UML diagram image                    # default `alt` attribute for diagram images
  #     image_maps: True                          # generate image maps when the format is png and there are hyperlinks
  #     priority: 30                              # plugin priority; the higher, the sooner will be applied (default 30)
  #     http_method: GET                          # GET or POST  - note that plantuml.com only supports GET (default GET)
  #     fallback_to_get: True                     # When using POST, should GET be used as fallback (POST will fail if @startuml/@enduml tags not used) (default True)
  #     theme: bluegray                           # theme to be set, can be overridden inside puml files, (default none)
  #     puml_notheme_cmdlist: [
  #                             'version',
  #                             'listfonts',
  #                             'stdlib',
  #                             'license'
  #                           ]                   # theme will not be set if listed commands present (default as listed)
extra_css:
  - "main.css"
